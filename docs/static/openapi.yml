openapi: '3.0.2'
info:
  title: SSI medical prescriptions DEMO API
  version: '1.0'
servers:
  - url: http://localhost:8080/v1

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 

paths:
  /{doctorId}/credential-offers/prescriptions:
    post:
      summary: Creates prescription offer to patient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: doctorId
          schema:
            type: string
          required: true
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  issuer:
                    type: object
                    properties:
                      id:
                        type: string
                        example: did:example:123
                      name:
                        type: string
                        example: Dr. Connors
                  medicines:
                    type: array
                    items:
                      type: string
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialOfferId:
                    type: string

          
  /{doctorId}/credential-offers/prescriptions/{credentialOfferId}:
    get:
      summary: Gets a credential offer
      parameters:
        - in: path
          name: doctorId
          schema:
            type: string
          required: true
        - in: path
          name: credentialOfferId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialOfferId:
                    type: string
                  issuer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                  medicines:
                    type: array
                    items:
                      type: string
                  nonce:
                    type: string
  
  /{patientId}/credentials/prescriptions/{credentialOfferId}:
    post:
      summary: Creates prescription credential for a given credential offer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
          required: true
        - in: path
          name: credentialOfferId
          schema:
            type: string
          required: true
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialOfferId:
                    type: string
                  did:
                    type: string
                  jws:
                    type: string
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@context':
                    type: array
                    items:
                      type: string
                    example: ["https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1", "https://w3id.org/security/suites/jws-2020/v1"]
                  type:
                    type: array
                    items:
                      type: string
                    example: ["VerifiableCredential", "PrescriptionCredential"]
                  issuer:
                    type: object
                    properties:
                      id:
                        type: string
                        example: did:example:123
                      name:
                        type: string
                        example: Dr. Connors
                  issuanceDate:
                    type: string
                  expirationDate:
                    type: string
                  credentialSubject:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      medicines:
                        type: array
                        items:
                          type: string
                        example: ["medicine1", "medicine2", "medicine3"]
                  proof:
                    type: object
                    properties:
                      type:
                        type: string
                        example: JsonWebSignature2020
                      created:
                        type: string
                        example: '2021-10-02T17:58:00Z'
                      proofPurpose:
                        type: string
                        example: assertionMethod
                      verificationMethod:
                        type: string
                        example: did:example:123#key-0
                      jws:
                        type: string   
                        example: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..VA8VQqAerUT6AIVdHc8W8Q2aj12LOQjV_VZ1e134NU9Q20eBsNySPjNdmTWp2HkdquCnbRhBHxIbNeFEIOOhAg                     
                  
  /{verifierId}/presentation-requests/prescriptions:
    post:
      summary: Creates prescription request (generates link for a QR code)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: verifierId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presentationRequestId:
                    type: string

  /{verifierId}/presentation-requests/prescriptions/{presentationRequestId}:
    get:
      summary: Gets prescription request by request id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: verifierId
          schema:
            type: string
          required: true
        - in: path
          name: presentationRequestId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presentationRequestId:
                    type: string
                  nonce:
                    type: string

  /{patientId}/presentations/prescriptions:
    post:
      summary: Creates presentation in response to presentation request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                presentationRequestId:
                  type: string
                presentation:
                  type: object
                jws:
                  type: string
        required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@context':
                    type: array
                    items:
                      type: string
                    example: ["https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1", "https://w3id.org/security/suites/jws-2020/v1"]
                  type:
                    type: string
                    example: "VerifiablePresentation"
                  verifiableCredential:
                    type: array
                    items:
                      type: object
                      example:
                        '@context': ["https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1", "https://w3id.org/security/suites/jws-2020/v1"]
                        type: ["VerifiableCredential", "PrescriptionCredential"]
                        issuer:
                          id: did:example:123
                          name: Dr. Connors
                        issuanceDate: 2021-10-02T17:58:00Z
                        expirationDate: 2021-10-02T17:58:00Z
                        credentialSubject:
                          id: did:example:76e12ec21ebhyu1f712ebc6f1z2
                          name: John Doe
                          medicines: ["medicine1", "medicine2", "medicine3"]
                        proof:
                          type: JsonWebSignature2020
                          created: 2021-10-02T17:58:00Z
                          proofPurpose: assertionMethod
                          verificationMethod: did:example:123#key-0
                          jws: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..VA8VQqAerUT6AIVdHc8W8Q2aj12LOQjV_VZ1e134NU9Q20eBsNySPjNdmTWp2HkdquCnbRhBHxIbNeFEIOOhAg
                  proof:
                    type: array
                    items:
                      type: object
                      example:
                        type: JsonWebSignature2020
                        created: '2021-10-02T17:58:00Z'
                        proofPurpose: authentication
                        verificationMethod: did:example:76e12ec21ebhyu1f712ebc6f1z2/keys/2
                        challenge: c0ae1c8e-c7e7-469f-b252-86e6a0e7387e
                        jws: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..VA8VQqAerUT6AIVdHc8W8Q2aj12LOQjV_VZ1e134NU9Q20eBsNySPjNdmTWp2HkdquCnbRhBHxIbNeFEIOOhAg

  /{verifierId}/presentations/prescriptions/presentationRequestId:
    get:
      summary: Gets a verifiable presentation for a given presentation request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: verifierId
          schema:
            type: string
          required: true
        - in: path
          name: presentationRequestId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@context':
                    type: array
                    items:
                      type: string
                    example: ["https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1", "https://w3id.org/security/suites/jws-2020/v1"]
                  type:
                    type: string
                    example: "VerifiablePresentation"
                  verifiableCredential:
                    type: array
                    items:
                      type: object
                      example:
                        '@context': ["https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1", "https://w3id.org/security/suites/jws-2020/v1"]
                        type: ["VerifiableCredential", "PrescriptionCredential"]
                        issuer:
                          id: did:example:123
                          name: Dr. Connors
                        issuanceDate: 2021-10-02T17:58:00Z
                        expirationDate: 2021-10-02T17:58:00Z
                        credentialSubject:
                          id: did:example:76e12ec21ebhyu1f712ebc6f1z2
                          name: John Doe
                          medicines: ["medicine1", "medicine2", "medicine3"]
                        proof:
                          type: JsonWebSignature2020
                          created: 2021-10-02T17:58:00Z
                          proofPurpose: assertionMethod
                          verificationMethod: did:example:123#key-0
                          jws: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..VA8VQqAerUT6AIVdHc8W8Q2aj12LOQjV_VZ1e134NU9Q20eBsNySPjNdmTWp2HkdquCnbRhBHxIbNeFEIOOhAg
                  proof:
                    type: array
                    items:
                      type: object
                      example:
                        type: JsonWebSignature2020
                        created: '2021-10-02T17:58:00Z'
                        proofPurpose: authentication
                        verificationMethod: did:example:76e12ec21ebhyu1f712ebc6f1z2/keys/2
                        challenge: c0ae1c8e-c7e7-469f-b252-86e6a0e7387e
                        jws: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..VA8VQqAerUT6AIVdHc8W8Q2aj12LOQjV_VZ1e134NU9Q20eBsNySPjNdmTWp2HkdquCnbRhBHxIbNeFEIOOhAg

  /{patientId}/credentials/prescriptions/{credentialId}:
    get:
      summary: Gets a specific credential issued for a given patient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
          required: true
        - in: path
          name: credentialId
          schema:
            type: string
          required: true
      responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    credentials:
                      type: array
                      items:
                        type: object

  /{patientId}/credentials/prescriptions:
    get:
      summary: Gets all credentials issued for a given patient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
          required: true
      responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    credentials:
                      type: array
                      items:
                        type: object
  
  /{patientId}/credentials/prescriptions/{credentialId}/presentation:
    get:
      summary: Gets presentation without proof of a specific credential issued for a given patient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: patientId
          schema:
            type: string
          required: true
        - in: path
          name: credentialId
          schema:
            type: string
          required: true
      responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    presentation:
                      type: object

                    

